<Window x:Class="Client.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Client"
        mc:Ignorable="d"
        WindowState="Maximized" WindowStyle="None"
		AllowsTransparency="True" ResizeMode="NoResize"
		Icon="./Resource/logo.jpg">

	<Window.Resources>
		<!-- style for check box -->
		<Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
		<Style x:Key="OptionMarkFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
		<SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
		<SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
		<SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
		<SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
		<SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
		<SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
		<SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
		<SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
		<SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
		<Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type CheckBox}">
						<Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" CornerRadius="4">
								<Grid x:Name="markGrid">
									<Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
									<Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
								</Grid>
							</Border>
							<ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="HasContent" Value="true">
								<Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
								<Setter Property="Padding" Value="4,-1,0,0"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
								<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
								<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
								<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
								<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
								<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
								<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
								<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="true">
								<Setter Property="Opacity" TargetName="optionMark" Value="1"/>
								<Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="{x:Null}">
								<Setter Property="Opacity" TargetName="optionMark" Value="0"/>
								<Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--Style for login button-->
		<SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
		<SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
		<SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
		<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
		<SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
		<SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
		<SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
		<SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
		<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
		<Style x:Key="LoginButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="5">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="border">
									<Setter.Value>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
											<LinearGradientBrush.RelativeTransform>
												<TransformGroup>
													<ScaleTransform CenterY="0.5" CenterX="0.5"/>
													<SkewTransform CenterY="0.5" CenterX="0.5"/>
													<RotateTransform Angle="120" CenterY="0.5" CenterX="0.5"/>
													<TranslateTransform/>
												</TransformGroup>
											</LinearGradientBrush.RelativeTransform>
											<GradientStop Color="#1115df" Offset="1"/>
											<GradientStop Color="#4f10b0"/>
										</LinearGradientBrush>

									</Setter.Value>
								</Setter>
								<Setter Property="BorderBrush" TargetName="border" Value="#4409bd"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" TargetName="border">
									<Setter.Value>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
											<LinearGradientBrush.RelativeTransform>
												<TransformGroup>
													<ScaleTransform CenterY="0.5" CenterX="0.5"/>
													<SkewTransform CenterY="0.5" CenterX="0.5"/>
													<RotateTransform Angle="120" CenterY="0.5" CenterX="0.5"/>
													<TranslateTransform/>
												</TransformGroup>
											</LinearGradientBrush.RelativeTransform>
											<GradientStop Color="#080a6f" Offset="1"/>
											<GradientStop Color="#270758"/>
										</LinearGradientBrush>

									</Setter.Value>
								</Setter>
								<Setter Property="BorderBrush" TargetName="border" Value="#21045e"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--Style for login button-->

		<Style x:Key="SignupButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true"></Trigger>
							<Trigger Property="IsPressed" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

	</Window.Resources>

	
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="2*"/>
			<ColumnDefinition Width="26*"/>
			<ColumnDefinition Width="2*"/>
		</Grid.ColumnDefinitions>

		<Grid.RowDefinitions>
			<RowDefinition Height="2*"/>
			<RowDefinition Height="20*"/>
			<RowDefinition Height="2*"/>
		</Grid.RowDefinitions>

		<Image Source="./Resource/bg.png"
			   Grid.RowSpan="3" Grid.ColumnSpan="3"
			   Stretch="Fill"/>

		<Rectangle Fill="#cdebf9"
				   Width="140"
				   Grid.ColumnSpan="2" Grid.RowSpan="2"
				   Margin="-75,-168,860,230"
				   RenderTransformOrigin="0.5,0.5"
				   Opacity="80">

			<Rectangle.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform Angle="-42"/>
					<TranslateTransform/>
				</TransformGroup>
			</Rectangle.RenderTransform>
		</Rectangle>

		<Ellipse
			Fill="Transparent"
			StrokeThickness="150"
			Stroke="#e0c6eb"
			Grid.ColumnSpan="2"
			Margin="-252,214,443,-336.417"
			Grid.Row="1" Grid.RowSpan="2"
			RenderTransformOrigin="0.5,0.5"
			Opacity="80">

			<Ellipse.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform AngleX="8.288"/>
					<RotateTransform Angle="-66"/>
					<TranslateTransform X="-250" Y="250"/>
				</TransformGroup>
			</Ellipse.RenderTransform>
		</Ellipse>

		<Border Background="White" Grid.Row="1" Grid.Column="1">
			<Border.Effect>
				<DropShadowEffect BlurRadius="15"
								  Direction="-90"
								  RenderingBias="Quality"
								  ShadowDepth="2"
								  Color="#dbeafc"/>
			</Border.Effect>

			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="317*"/>
					<ColumnDefinition Width="349*"/>
				</Grid.ColumnDefinitions>

				<Image Source="./Resource/border/side-bg.png" 
					   Grid.Column="1"
					   Stretch="Fill"/>

				<Image Source="./Resource/border/left-shapes.png" 
					   Grid.Column="1"
					   HorizontalAlignment="Left"/>

				<Image Source="./Resource/border/right-shapes.png" 
					   Grid.Column="1"
					   HorizontalAlignment="Right"/>

				<Image Source="./Resource/border/mid-shapes.png" 
					   Grid.Column="1"
					   VerticalAlignment="Center"/>

				<Image Source="./Resource/border/wave.png" 
					   Grid.Column="1"
					   VerticalAlignment="Bottom"
					   HorizontalAlignment="Right"/>

				<Image Source="./Resource/border/sparkles.png" 
					   Grid.Column="1"
					   VerticalAlignment="Center"/>

				<Image Source="./Resource/border/people.png" 
					   Grid.Column="1"
					   VerticalAlignment="Center" Margin="0,108,0,10"/>

				<Grid Grid.Column="0">
					<Grid.RowDefinitions>
						<RowDefinition Height="1*"/>
						<RowDefinition Height="6*"/>
						<RowDefinition Height="1*"/>
					</Grid.RowDefinitions>

					<StackPanel Grid.Row="1" Margin="50,0,0,0">

						<TextBlock Text="Welcome To Trivia!"
							   FontFamily="Arial Rounded MT Bold"
							   FontSize="50"
							   FontWeight="ExtraBold"
							   Foreground="#2a2e47"/>

						<TextBlock FontFamily="Arial Rounded MT "
								   Text="Start the advanture with your friends today."
								   Margin="5,8,0,0"
								   FontSize="14"
								   Foreground="#a9b6ce"/>

						<TextBox x:Name="TB_Username"
								 Height="50" Width="400"
								 HorizontalAlignment="Left"
								 BorderBrush="#e2e5ea"
								 Margin="5,50,0,0" 
								 Text="username or email"
								 VerticalContentAlignment="Center"
								 Padding="10"
								 Foreground="#dce0e9"
								 IsTabStop="True"
								 FontSize="15"
								 FontFamily="Courier"
								 GotFocus="TB_Username_GotFocus"
								 LostFocus="TB_Username_LostFocus"
								 TextChanged="TB_Username_TextChanged">
							<TextBox.Resources>
								<Style TargetType="{x:Type Border}">
									<Setter Property="CornerRadius" Value="5"/>
								</Style>
							</TextBox.Resources>

						</TextBox>

						<TextBox x:Name="TB_Password"
								 Height="50" Width="400"
								 HorizontalAlignment="Left"
								 BorderBrush="#e2e5ea"
								 Margin="5,30,0,0" 
								 Text="password"
								 VerticalContentAlignment="Center"
								 Padding="10"
								 Foreground="#dce0e9"
								 IsTabStop="True"
								 FontSize="15"
								 FontFamily="Courier"
								 MaxLength="18"
								 GotFocus="TB_Password_GotFocus"
								 LostFocus="TB_Password_LostFocus"
								 TextChanged="TB_Password_TextChanged">

							<TextBox.Resources>
								<Style TargetType="{x:Type Border}">
									<Setter Property="CornerRadius" Value="5"/>
								</Style>
							</TextBox.Resources>

						</TextBox>

						<CheckBox x:Name="CB_ShowPassword"
								  Height="30"
								  Width="100"
								  HorizontalAlignment="Left"
								  Margin="5,15,0,0"
								  BorderBrush="#dce0e9"
								  Content="show password"
								  IsChecked="False"
								  VerticalContentAlignment="Center"
								  Foreground="#a9b6ce"
								  FontFamily="Courier"
								  Style="{DynamicResource CheckBoxStyle}"
								  Checked="CB_ShowPassword_Checked"
								  Unchecked="CB_ShowPassword_Unchecked"/>

						<Button Height="50" Width="400"
								HorizontalAlignment="Left"
								Margin="5,30,0,0"
								BorderBrush="#5e42ed"
								BorderThickness="2"
								Content="Login"
								Foreground="#baabf9"
								FontSize="30"
								FontFamily="Arial Rounded MT Bold"
								HorizontalContentAlignment="Center"
								Style="{DynamicResource LoginButtonStyle}">
							<Button.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<LinearGradientBrush.RelativeTransform>
										<TransformGroup>
											<ScaleTransform CenterY="0.5" CenterX="0.5"/>
											<SkewTransform CenterY="0.5" CenterX="0.5"/>
											<RotateTransform Angle="120" CenterY="0.5" CenterX="0.5"/>
											<TranslateTransform/>
										</TransformGroup>
									</LinearGradientBrush.RelativeTransform>
									<GradientStop Color="#FF6568F3" Offset="1"/>
									<GradientStop Color="#7529eb"/>
								</LinearGradientBrush>
							</Button.Background>
						</Button>

						<WrapPanel>

							<TextBlock FontFamily="Arial Rounded MT"
								   Text="Don't have an account?"
								   Margin="5,40,0,0"
								   FontSize="12"
								   FontWeight="Thin"
								   Foreground="#a9b6ce"/>

							<Button x:Name="Bt_Signup"
								Content="Click Here"
								Foreground="#8f50f6"
								Background="Transparent"
								BorderBrush="Transparent"
								Margin="5,32,0,0"
								Height="30"
								FontSize="12"
								FontFamily="Arial Rounded MT"
								FontWeight="Thin"
								MouseEnter="Bt_Signup_MouseEnter"
								MouseLeave="Bt_Signup_MouseLeave"
								Click="Bt_Signup_Click"
								ClickMode="Press"
								Style="{DynamicResource SignupButtonStyle}">
							</Button>

						</WrapPanel>
					</StackPanel>
				</Grid>


			</Grid>
		</Border>
	</Grid>
</Window>
